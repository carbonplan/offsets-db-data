[build-system]
requires = ["setuptools>=64", "setuptools-scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "offsets-db-data"
description = "Monitoring the global carbon market"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "CarbonPlan", email = "tech@carbonplan.org" }]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]


dynamic = ["version", "dependencies"]

[tool.setuptools.dynamic]

dependencies = { file = ["requirements.txt"] }
optional-dependencies = { dev = { file = ["requirements-dev.txt"] } }


[project.urls]
repository = "https://github.com/carbonplan/offsets-db-data"

[tool.setuptools.packages.find]
include = ["offsets_db_data*"]

[tool.setuptools.package-data]
offsets_db_data = ["py.typed", "configs/*.json"]

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "node-and-date"
fallback_version = "999"
write_to = "offsets_db_data/_version.py"
write_to_template = '__version__ = "{version}"'

[tool.coverage.run]
omit = ["tests/*"]
branch = true




[tool.ruff]
line-length = 100
target-version = "py310"
builtins = ["ellipsis"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}
ignore = [
    "E721", # Comparing types instead of isinstance
    "E741", # Ambiguous variable names
    "E501", # Conflicts with ruff format
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]


[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.isort]
known-first-party = ["offsets_db_data"]
combine-as-imports = true

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.pydocstyle]
convention = "numpy"


[tool.pytest.ini_options]
console_output_style = "count"
addopts = "-n auto --cov=./ --cov-report=xml  --cov-report=term-missing --verbose"
